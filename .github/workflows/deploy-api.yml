name: Deploy API

on:
  workflow_run:
    workflows: ["Tests"]
    types: [completed]
    paths-ignore:
      - 'web/**'
      - 'infrastructure/**'
      - '.github/**'
      - '!.github/workflows/deploy-api.yml'
    branches:
      - master

jobs:
  deploy_api:
    name: Deploy API
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit`
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Yarn Install
        run: |
          yarn install
        working-directory: api
      - name: serverless deploy
        run: |
          touch api/.env.local.production
          echo "USER_DATA=$USER_DATA" >> "api/.env.production.local"
          echo "JWT_SECRET=$JWT_SECRET" >> "api/.env.production.local"
          echo "UUID_NAMESPACE=$UUID_NAMESPACE" >> "api/.env.production.local"
          yarn api deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_MASTER_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_MASTER_SECRET_ACCESS_KEY }}
          USER_DATA: ${{ secrets.USER_DATA }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          UUID_NAMESPACE: ${{ secrets.UUID_NAMESPACE }}

