type HourSchedule {
    start: String!
    end: String!
    slotIntervalMinutes: Int!
    slotDurationMinutes: Int!
}

input DateScheduleInput {
    day: String!
    start: String!
    end: String!
    slotIntervalMinutes: Int!
    slotDurationMinutes: Int!
}


type DateSchedule {
    isoDate: String!
    schedule: HourSchedule!
}

type Schedule {
    mon: HourSchedule!
    tue: HourSchedule!
    wed: HourSchedule!
    thu: HourSchedule!
    fri: HourSchedule!
    sat: HourSchedule!
    sun: HourSchedule!
    overriddenDates: [DateSchedule]
}

type Customer {
    id: String!
    issuer: String!
    credits: Int!
    enabled: Boolean!
}

type Resource {
    id: String!
    customer: Customer!
    category: String
    label: String!
    schedule: Schedule!
    seats: Int!
    enabled: Boolean!
}

input CreateResourceInput {
    id: String
    customerId: String!
    category: String
    label: String!
    seats: Int!
    enabled: Boolean!
    schedule: [DateScheduleInput!]!
}

input FindResourceInput {
    customerId: String
    category: String
    label: String
    enabled: Boolean
}


type Booking {
    id: String!
    customer: Customer!
    userId: String!
    resourceId: String!
    start: Int!
    end: Int!
    canceled: Boolean!
    comment: String
    seatNumber: Int!
}

input FindBookingInput {
    customerId: String
    userId: String
    resourceIds: [String!]
    from: Int
    to: Int
    includeCanceled: Boolean
}


input CreateBookingInput {
    id: String!
    customerId: String!
    userId: String!
    resourceId: String!
    start: Int!
    end: Int!
    canceled: Boolean
    comment: String
    seatNumber: Int!
}

type TimeSlot {
    availableSeats: Int!
    start: Int!
    end: Int!
}

input FindAvailabilityInput {
    customerId: String!
    resourceIds: [String!]!
    from: Int
    to: Int
}

type BookedDuration {
    minutes: Int!
    bookingIds: [String!]!
    numBookings: Int!
}


input UpdateResourceInput {
    id: String!
    category: String
    label: String
    seats: Int
    enabled: Boolean
    schedule: [DateScheduleInput]
}


type Query {
    getResourceById(resourceId: String!): Resource
    getBookingById(bookingId: String!): Booking
    getCustomerByIssuer(issuer: String!): Customer
    findResources(filter: FindResourceInput!): [Resource]
    findBookings(filter: FindBookingInput!): [Booking]
    findAvailability(filter: FindAvailabilityInput!): [TimeSlot]
    getNextAvailable(resourceId: String!): TimeSlot
    getLatestBooking(filter: FindBookingInput): Booking
    getBookedDuration(filter: FindBookingInput): BookedDuration
}

type Mutation {
    addResource(resource: CreateResourceInput!): Resource
    updateResource(resource: UpdateResourceInput!): Resource
    addBooking(booking: CreateBookingInput!): Booking
    deleteResource(resourceId: String!): Resource
    cancelBooking(bookingId: String!): Booking
}
